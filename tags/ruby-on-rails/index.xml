<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby On Rails on (rudolph-miller)</title>
    <link>https://blog.rudolph-miller.com/tags/ruby-on-rails/</link>
    <description>Recent content in Ruby On Rails on (rudolph-miller)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; 2015 Rudolph Miller</copyright>
    <lastBuildDate>Fri, 11 Dec 2015 00:00:06 +0900</lastBuildDate>
    <atom:link href="https://blog.rudolph-miller.com/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>React Redux Rails</title>
      <link>https://blog.rudolph-miller.com/2015/12/11/react-redux-rails/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:06 +0900</pubDate>
      
      <guid>https://blog.rudolph-miller.com/2015/12/11/react-redux-rails/</guid>
      <description>

&lt;p&gt;React.js &amp;amp; Redux &amp;amp; Ruby on Railsでserver-side rendering.&lt;/p&gt;

&lt;p&gt;この記事は&lt;a href=&#34;http://qiita.com/advent-calendar/2015/reactjs&#34;&gt;React.js Advent Calendar 2015&lt;/a&gt;の10日目の記事であり、&lt;br /&gt;
&lt;a href=&#34;http://qiita.com/advent-calendar/2015/vdom-flux&#34;&gt;仮想DOM/Flux Advent Calendar 2015&lt;/a&gt;の10日目の記事です. (欲張り.)&lt;/p&gt;

&lt;p&gt;Source codeは&lt;a href=&#34;https://github.com/Rudolph-Miller/react_rails_example&#34;&gt;React Rails Example&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#react-redux-rails:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;React Redux Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#see-also:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;react-redux-rails:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;React Redux Rails&lt;/h1&gt;

&lt;h2 id=&#34;react-js:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;React.js&lt;/h2&gt;

&lt;p&gt;React.jsはFacebook製のJavaScriptのUI Library.&lt;br /&gt;
Viewの状態管理をさぼれる.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/advent-calendar/2014/reactjs&#34;&gt;一人React.js Advent Calendar 2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;redux:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;Redux&lt;/h2&gt;

&lt;p&gt;Reduxは今一番熱いFlux architecture frameworkで状態管理をatomitにする.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rackt/redux&#34;&gt;Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rackt/react-redux&#34;&gt;React Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://amagitakayosi.hatenablog.com/entry/2015/07/30/000000&#34;&gt;人気のFluxフレームワークReduxをさわってみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;react-rails:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;react-rails&lt;/h2&gt;

&lt;p&gt;Ruby on RailsにはReact.jsのserver-side renderingを容易にするGemがある.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;&amp;lt;%= react_component(&#39;HelloMessage&#39;, name: &#39;John&#39;) %&amp;gt;
&amp;lt;!-- becomes: --&amp;gt;
&amp;lt;div data-react-class=&amp;quot;HelloMessage&amp;quot; data-react-props=&amp;quot;{&amp;amp;quot;name&amp;amp;quot;:&amp;amp;quot;John&amp;amp;quot;}&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じにViewにReact.jsのComponentを埋め込むことができる.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react_component&lt;/code&gt; の3つ目の引数として &lt;code&gt;{prerender: true}&lt;/code&gt; を渡すだけで、server-side renderingができる.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;&amp;lt;%= react_component(&#39;HelloMessage&#39;, {name: &#39;John&#39;}, {prerender: true}) %&amp;gt;
&amp;lt;!-- becomes: --&amp;gt;
&amp;lt;div data-react-class=&amp;quot;HelloMessage&amp;quot; data-react-props=&amp;quot;{&amp;amp;quot;name&amp;amp;quot;:&amp;amp;quot;John&amp;amp;quot;}&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Hello, John!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/reactjs/react-rails&#34;&gt;react-rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/joe-re/items/96f12dda4a62470d1d7c&#34;&gt;react-railsを使ってReactのTutorialをやってみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;try:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;Try&lt;/h2&gt;

&lt;p&gt;これらを合わせて、Reduxで状態管理をして、ReactでComponentを組み立て、Ruby on Railsでserver-side renderingをしてみた.&lt;/p&gt;

&lt;p&gt;BaseのAppはReduxのBasic tutorialになっている&lt;a href=&#34;http://rackt.org/redux/docs/basics/ExampleTodoList.html&#34;&gt;tiny todo app&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;&amp;lt;%= react_component(&#39;Root&#39;, {presetTodos: @todos}, {prerender: true}) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Rudolph-Miller/react_rails_example/blob/ab95d682a10b91358f01bb431be2cdb397795cdd/app/views/todos/index.html.erb#L1&#34;&gt;app/views/todos/index.html.erb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;とRuby on RailsのViewに埋め込むことにより、初回は server-side renderingで &lt;code&gt;@todos&lt;/code&gt; を &lt;code&gt;props&lt;/code&gt; に渡して &lt;code&gt;componentDidMount&lt;/code&gt; でDataをsetし、
それ以外で &lt;code&gt;Root&lt;/code&gt; をrenderした時は &lt;code&gt;componentDidMount&lt;/code&gt; でDataをfetchする.&lt;br /&gt;
(今回のExampleではこの遷移は実装していないが、 &lt;code&gt;{presetTodos: @todos}&lt;/code&gt; をはずぜばこの挙動となる.)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;componentDidMount() {
	const { dispatch, presetTodos } = this.props;
	if (presetTodos) {
		dispatch(setTodos(presetTodos));
	} else {
		dispatch(fetchTodos());
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Rudolph-Miller/react_rails_example/blob/ab95d682a10b91358f01bb431be2cdb397795cdd/app/assets/javascripts/containers/App.js#L38-L45&#34;&gt;app/assets/javascripts/containers/App.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;軽くポイントを掻い摘む.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScriptのLibrary管理はnpmでbrowserify-railsを使ってBabelでbuildした.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;application.js&lt;/code&gt; は &lt;code&gt;//= require react_ujs&lt;/code&gt; と &lt;code&gt;//= require components&lt;/code&gt; のみ. (&lt;a href=&#34;https://github.com/Rudolph-Miller/react_rails_example/blob/c07553236da0464393fccf75ecb6a3d61f48b4e2/app/assets/javascripts/application.js#L1-L2&#34;&gt;app/assets/javascripts/application.js&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Babel 6だとDecorationが未supportだったため、Babel 5を使用した. (&lt;a href=&#34;http://phabricator.babeljs.io/T2645&#34;&gt;Implement new decorator proposal when finalized&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ReduxでAsync.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://rackt.org/redux/docs/advanced/AsyncActions.html&#34;&gt;Async Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Rudolph-Miller/react_rails_example/blob/ab95d682a10b91358f01bb431be2cdb397795cdd/app/assets/javascripts/actions/index.js#L34-L54&#34;&gt;app/assets/javascripts/actions/index.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;詳しくはSourceに.
質問があればTwitterで &lt;a href=&#34;https://twitter.com/Rudolph_Miller&#34;&gt;#Rudolph_Miller&lt;/a&gt; に聞いて下さい.&lt;/p&gt;

&lt;p&gt;意外とすんなり書け、すんなり動いたので、どこかで実戦投入したいと思う.&lt;/p&gt;

&lt;h1 id=&#34;see-also:982e6b4bd120a43daf7d20e0e817411f&#34;&gt;See Also&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Rudolph-Miller/react_rails_example&#34;&gt;React Rails Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/flux&#34;&gt;Flux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rackt/redux&#34;&gt;Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rackt/react-redux&#34;&gt;React Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/reactjs/react-rails&#34;&gt;react-rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/browserify-rails/browserify-rails&#34;&gt;Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/browserify-rails/browserify-rails&#34;&gt;browserify-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade Ruby on Rails</title>
      <link>https://blog.rudolph-miller.com/slide/2015/10/16/upgrade_ruby_on_rails/</link>
      <pubDate>Fri, 16 Oct 2015 12:01:40 +0900</pubDate>
      
      <guid>https://blog.rudolph-miller.com/slide/2015/10/16/upgrade_ruby_on_rails/</guid>
      <description>

&lt;p&gt;name: inverse
layout: true&lt;/p&gt;

&lt;h2 id=&#34;class-center-middle-inverse:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;class: center, middle, inverse&lt;/h2&gt;

&lt;h1 id=&#34;kaizen-week-1:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;Kaizen Week #1&lt;/h1&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;rudolph-miller:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;@Rudolph-Miller&lt;/h1&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;3-2-to-4-2:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;3.2 to 4.2&lt;/h1&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;upgrade-ruby-on-rails:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;Upgrade Ruby on Rails&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;layout: false
.left-column[&lt;/p&gt;

&lt;h1 id=&#34;手順:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;手順&lt;/h1&gt;

&lt;p&gt;]&lt;/p&gt;

&lt;p&gt;.right-column[
1. リリースノート.
  - リリースノートで変更を頭に入れておく.
2. Gemのupgrade.
  - RailsのUpgrade.
  - 依存解決.
3. 作業.
  - 壊れたところを直す.
4. 2 -&amp;gt; 3を繰り返す.
  - RailsのVersionは徐々にあげる.
  - 3.2 -&amp;gt; 4.0 -&amp;gt; 4.1 -&amp;gt; 4.2
]&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;リリースノートはnew-railsの説明書:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;リリースノートはNew Railsの説明書&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://railsguides.jp/4_0_release_notes.html&#34;&gt;Ruby on Rails 4.0 リリースノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://railsguides.jp/4_1_release_notes.html&#34;&gt;Ruby on Rails 4.1 リリースノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://railsguides.jp/4_2_release_notes.html&#34;&gt;Ruby on Rails 4.2 リリースノート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;template: inverse&lt;/p&gt;

&lt;h1 id=&#34;説明書は読まないタイプ:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;説明書は読まないタイプ.&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;.left-column[&lt;/p&gt;

&lt;h1 id=&#34;作業:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;作業&lt;/h1&gt;

&lt;p&gt;]&lt;/p&gt;

&lt;p&gt;.right-column[
1. Railsのupdate.
2. &lt;code&gt;bundle upgate rails&lt;/code&gt;
  - 依存解決に失敗したら頑張る.
  - &lt;code&gt;bundle update&lt;/code&gt;
3. &lt;code&gt;bundle exec rake rails:update&lt;/code&gt;
  - config fileのupdate.
4. &lt;code&gt;bundle exec rake spec&lt;/code&gt;
  - 起動するまで頑張る.
  - 起動してからも頑張る.
]&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;template: inverse&lt;/p&gt;

&lt;h1 id=&#34;障害:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;障害&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;.left-column[&lt;/p&gt;

&lt;h2 id=&#34;api変更:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;API変更&lt;/h2&gt;

&lt;p&gt;]&lt;/p&gt;

&lt;p&gt;.right-column[
- scopeの書き方.
  - 心を無にして対応.
- relationの定義のincludeがdeprecated.
  - 心を無にして(ry.
- joinsしてそのtableの条件を使用する時はreferencesを明示する.
  - 心を(ry.
]&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;.left-column[&lt;/p&gt;

&lt;h2 id=&#34;gem:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;Gem&lt;/h2&gt;

&lt;p&gt;]&lt;/p&gt;

&lt;p&gt;.right-column[
- メンテ停止したGem達.
- 別Versionでの動作が保証されていないpatchが多数.
]&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;.left-column[&lt;/p&gt;

&lt;h2 id=&#34;activerecord:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;ActiveRecord&lt;/h2&gt;

&lt;p&gt;]&lt;/p&gt;

&lt;p&gt;.right-column[&lt;/p&gt;

&lt;h3 id=&#34;失われた-bind-values:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;失われた&lt;code&gt;bind_values&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ActiveRecordをUpgrade.

&lt;ul&gt;
&lt;li&gt;4.0 -&amp;gt; 4.1&lt;/li&gt;
&lt;li&gt;4.1 -&amp;gt; 4.2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;existsがbroken.

&lt;ul&gt;
&lt;li&gt;とはいえ相関subqueryのPerformanceは.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INNER JOIN&lt;/code&gt;で書き直すか.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;subqueryがbroken.
]&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;template: inverse&lt;/p&gt;

&lt;h1 id=&#34;結果:01b2bdbc95643419b77b9948ad6b09f4&#34;&gt;結果&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;background-image: url(/images/20151016/to_be_continued.jpg)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>