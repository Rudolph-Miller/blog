<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Remark.Js on (rudolph-miller)</title>
    <link>https://blog.rudolph-miller.com/tags/remark/index.js/</link>
    <description>Recent content in Remark.Js on (rudolph-miller)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; 2015 - 2016 Rudolph Miller</copyright>
    <lastBuildDate>Sat, 13 Feb 2016 01:17:33 +0900</lastBuildDate>
    <atom:link href="https://blog.rudolph-miller.com/tags/remark.js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Export HTML Slide as PDF</title>
      <link>https://blog.rudolph-miller.com/2016/02/13/export-html-slide-as-pdf/</link>
      <pubDate>Sat, 13 Feb 2016 01:17:33 +0900</pubDate>
      
      <guid>https://blog.rudolph-miller.com/2016/02/13/export-html-slide-as-pdf/</guid>
      <description>

&lt;p&gt;HTMLなSlideをPDFにexportする.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#html-slide:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;HTML Slide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#export-html-slide:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;Export HTML Slide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#see-also:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;html-slide:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;HTML Slide&lt;/h1&gt;

&lt;p&gt;最近 &lt;a href=&#34;https://github.com/yusukebe/revealgo&#34;&gt;yusukebe/revealgo&lt;/a&gt; が話題となり
MarkdownでHTML Slideのgenerateが再燃(?)しているが、
HTML Slideで困るのがSlideの共有だ.&lt;/p&gt;

&lt;p&gt;普段Remark.jsを使ってMarkdownからHTML Slideをgenerateしているのだが、
以前Kaizen PlatformでのTech Talk #4で &lt;a href=&#34;https://blog.rudolph-miller.com/slide/2015/10/29/about-lisp/&#34;&gt;Slide&lt;/a&gt;
を発表した際、共有のために &lt;code&gt;iframe&lt;/code&gt; でこのSlideを埋め込んだ
&lt;a href=&#34;https://blog.rudolph-miller.com/2015/11/01/tech-talk-about-lisp/&#34;&gt;Blog post&lt;/a&gt; を作り共有していた.&lt;/p&gt;

&lt;img src=&#34;https://blog.rudolph-miller.com/images/20160213/share_lisp_1.gif&#34; alt=&#34;20160213/share_lisp_1.gif&#34;&gt;


&lt;p&gt;今更ながらふと、PhantomJSなどでScreenshotを撮り、それをPDFに変換し、
Speaker Deck や SlideShare にuploadして共有できないかと考えた.&lt;/p&gt;

&lt;h1 id=&#34;export-html-slide:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;Export HTML Slide&lt;/h1&gt;

&lt;p&gt;そんなTool作ろうとしたところで、とりあえず調べてみると
&lt;a href=&#34;https://github.com/astefanutti/decktape&#34;&gt;DeckTape&lt;/a&gt; というProjectが見つかった.&lt;/p&gt;

&lt;h2 id=&#34;about-decktape:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;About DeckTape&lt;/h2&gt;

&lt;p&gt;DeckTapeは&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DeckTape is a high-quality PDF exporter for HTML5 presentation frameworks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;らしい.&lt;/p&gt;

&lt;p&gt;SupportしているFrameworkは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://leaverou.github.io/csss/&#34;&gt;CSSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://imakewebthings.com/deck.js/&#34;&gt;deck.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://paulrouget.com/dzslides/&#34;&gt;DZSlides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://flowtime-js.marcolago.com/&#34;&gt;flowtime.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/Talks/Tools/&#34;&gt;HTML Slidy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://impress.github.io/impress.js&#34;&gt;impress.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://remarkjs.com/&#34;&gt;remark.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lab.hakim.se/reveal-js&#34;&gt;reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shwr.me/&#34;&gt;Shower&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で、使用していた Remark.js もsupportされていた.&lt;/p&gt;

&lt;p&gt;とりあえずこれを使ってSpeaker Deckにuploadしてみる.&lt;/p&gt;

&lt;h2 id=&#34;install:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;DeckTapeのREADMEの &lt;a href=&#34;https://github.com/astefanutti/decktape#install&#34;&gt;Install&lt;/a&gt; sectionを見ると、PhantomJSのforked versionを使用しているとのこと.
これを見てやめようかと思ったが、READMEを少し読んでいくと &lt;a href=&#34;https://github.com/astefanutti/decktape#docker&#34;&gt;Docker&lt;/a&gt; なるsectionがあり、どうもDocker imageを配布しているようなので、Docker imageでInstallすることにする.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker pull astefanutti/decktape
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;簡単だ.&lt;/p&gt;

&lt;h2 id=&#34;run:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;Run&lt;/h2&gt;

&lt;p&gt;とりあえず&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run astefanutti/decktape -h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;してみると、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run astefanutti/decktape -h

Usage: phantomjs decktape.js [options] [command] &amp;lt;url&amp;gt; &amp;lt;filename&amp;gt;

command      one of: automatic, csss, deck, dzslides, flowtime, generic, impress, remark, reveal, shower, slidy
url          URL of the slides deck
filename     Filename of the output PDF file

Options:
   -s, --size                Size of the slides deck viewport: &amp;lt;width&amp;gt;x&amp;lt;height&amp;gt;  [1280x720]
   -p, --pause               Duration in milliseconds before each slide is exported  [1000]
   --screenshots             Capture each slide as an image  [false]
   --screenshots-directory   Screenshots output directory  [screenshots]
   --screenshots-size        Screenshots resolution, can be repeated
   --screenshots-format      Screenshots image format, one of [jpg, png]  [png]

Defaults to the automatic command.
Iterates over the available plugins, picks the compatible one for presentation at the 
specified &amp;lt;url&amp;gt; and uses it to export and write the PDF into the specified &amp;lt;filename&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と表示され、ちゃんと動いてることが分かった.&lt;/p&gt;

&lt;p&gt;Docker imageなので良い感じににcurrent directoryをmountして、さらにScreen sizeを指定して&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run --rm -v `pwd`:/pwd astefanutti/decktape -s 1240x930 https://blog.rudolph-miller.com/slide/2015/10/29/about-lisp/ /pwd/lisp.pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Loading page https://blog.rudolph-miller.com/slide/2015/10/29/about-lisp/ ...

Loading page finished with status: success
Remark JS DeckTape plugin activated
Printing slide #88      (1/88) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と読み込まれ、Remark.js製ということも判別でき、処理が始まったようだ.&lt;/p&gt;

&lt;p&gt;最後に&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Printed 88 slides
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と表示されて、処理は終了. &lt;code&gt;lisp.pdf&lt;/code&gt; にPDFが生成されていた.&lt;/p&gt;

&lt;h2 id=&#34;upload:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;Upload&lt;/h2&gt;

&lt;p&gt;あとはこの生成された &lt;code&gt;lisp.pdf&lt;/code&gt; をSpeaker Deckにuploadすると、&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;77ce6ba2d6134d94a77e432f0246cd06&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;のようにちゃんと処理できていることが分かる.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;これでなんの気兼ねもなく、これからもMarkdownでSlideを作れる.&lt;/p&gt;

&lt;p&gt;めでたし.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;see-also:a5ea6a661ec970ab6e9fbdd82bb7f6a8&#34;&gt;See Also&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astefanutti/decktape&#34;&gt;DeckTape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yusukebe/revealgo&#34;&gt;yusukebe/revealgo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rudolph-miller.com/slide/2015/10/29/about-lisp/&#34;&gt;Tech Talk About Lisp - Slide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rudolph-miller.com/2015/11/01/tech-talk-about-lisp/&#34;&gt;Tech Talk About Lisp - Blog post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>