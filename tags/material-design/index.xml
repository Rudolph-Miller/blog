<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Material Design on (rudolph-miller)</title>
    <link>https://blog.rudolph-miller.com/tags/material-design/</link>
    <description>Recent content in Material Design on (rudolph-miller)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; 2015 Rudolph Miller</copyright>
    <lastBuildDate>Mon, 11 Jan 2016 21:15:39 +0900</lastBuildDate>
    <atom:link href="https://blog.rudolph-miller.com/tags/material-design/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Theme of Material-UI</title>
      <link>https://blog.rudolph-miller.com/2016/01/11/theme-of-material-ui/</link>
      <pubDate>Mon, 11 Jan 2016 21:15:39 +0900</pubDate>
      
      <guid>https://blog.rudolph-miller.com/2016/01/11/theme-of-material-ui/</guid>
      <description>

&lt;p&gt;Material-UIのThemeの使い方を紹介.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#material-ui:2974f27f4339877b24e592c5128f86c3&#34;&gt;Material-UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#theme:2974f27f4339877b24e592c5128f86c3&#34;&gt;Theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#see-also:2974f27f4339877b24e592c5128f86c3&#34;&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;material-ui:2974f27f4339877b24e592c5128f86c3&#34;&gt;Material-UI&lt;/h1&gt;

&lt;p&gt;Material-UIとMaterial Designについては&lt;a href=&#34;https://blog.rudolph-miller.com/2016/01/04/material-ui/&#34;&gt;前回&lt;/a&gt;の記事を参照.&lt;/p&gt;

&lt;h1 id=&#34;theme:2974f27f4339877b24e592c5128f86c3&#34;&gt;Theme&lt;/h1&gt;

&lt;p&gt;Material Designでは色をPrimary color paletteとSecondary color (Accent color) paletteに限定することにより、
直感的で統一感のあるDesignを作り出している.&lt;/p&gt;

&lt;p&gt;Material-UIではこれをThemeとして管理する.&lt;/p&gt;

&lt;h2 id=&#34;color:2974f27f4339877b24e592c5128f86c3&#34;&gt;Color&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.rudolph-miller.com/2016/01/04/material-ui/&#34;&gt;前回&lt;/a&gt;の記事の&lt;a href=&#34;https://blog.rudolph-miller.com/2016/01/04/material-ui/#example:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Example&lt;/a&gt;にThemeを適用し、Colorを変更する.&lt;/p&gt;

&lt;p&gt;Colorの指定は&lt;a href=&#34;https://www.google.com/design/spec/style/color.html#color-color-palette&#34;&gt;Color palette&lt;/a&gt;とMaterial-UIの&lt;a href=&#34;http://www.material-ui.com/#/customization/colors&#34;&gt;customization/colors&lt;/a&gt;を参照.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import ThemeManager from &#39;material-ui/lib/styles/theme-manager&#39;;
import ThemeDecorator from &#39;material-ui/lib/styles/theme-decorator&#39;;
import Colors from &#39;material-ui/lib/styles/colors&#39;;
import ColorManipulator from &#39;material-ui/lib/utils/color-manipulator&#39;;
import LightRawTheme from &#39;material-ui/lib/styles/raw-themes/light-raw-theme&#39;;

export default ThemeManager.modifyRawThemePalette(
  ThemeManager.getMuiTheme(LightRawTheme),
  {
    primary1Color: Colors.cyan500,
    primary2Color: Colors.cyan700,
    primary3Color: Colors.lightBlack,
    accent1Color: Colors.green400,
    accent2Color: Colors.grey100,
    accent3Color: Colors.grey500,
    textColor: Colors.blueGrey800,
    alternateTextColor: Colors.white,
    canvasColor: Colors.white,
    borderColor: Colors.grey300,
    disabledColor: ColorManipulator.fade(Colors.darkBlack, 0.3),
    pickerHeaderColor: Colors.cyan500
  }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を &lt;code&gt;theme.js&lt;/code&gt; に書き込み、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt; import { render } from &#39;react-dom&#39;;
 import React, { Component, PropTypes } from &#39;react&#39;;
 import injectTapEventPlugin from &#39;react-tap-event-plugin&#39;;
 injectTapEventPlugin();
 
 import {
   Avatar, Card, CardActions,
   CardHeader, CardMedia, CardTitle,
-  RaisedButton, FlatButton, CardText
+  RaisedButton, FlatButton, CardText,
+  ThemeWrapper
 } from &#39;material-ui&#39;;
+import ThemeDecorator from &#39;material-ui/lib/styles/theme-decorator&#39;;

+import Theme from &#39;./theme&#39;;
 
+@ThemeDecorator(Theme)
 class App extends Component {
 ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;@ThemeDecorator&lt;/code&gt; で適用する.&lt;/p&gt;

&lt;img src=&#34;https://blog.rudolph-miller.com/images//20160111/theme-applied.png&#34; alt=&#34;/20160111/theme-applied.png&#34;&gt;


&lt;p&gt;簡単にColorなどを変更できるが、Themeとして管理することにより、統一感が崩れない.&lt;/p&gt;

&lt;h2 id=&#34;font-family:2974f27f4339877b24e592c5128f86c3&#34;&gt;Font Family&lt;/h2&gt;

&lt;p&gt;Material-UIのdefaultの &lt;code&gt;font-family&lt;/code&gt; は &lt;code&gt;&#39;Roboto&#39;, sans-serif&lt;/code&gt; だが、日本語などの &lt;code&gt;Roboto&lt;/code&gt; でカバーされていない言語の場合 &lt;code&gt;Noto&lt;/code&gt; を使用したい.&lt;br /&gt;
(Material Designの&lt;a href=&#34;https://www.google.com/design/spec/style/typography.html#typography-typeface&#34;&gt;Typography&lt;/a&gt;参考.)&lt;/p&gt;

&lt;p&gt;今回は &lt;code&gt;Noto Sans JP&lt;/code&gt; を使用するため、あらかじめHTMLに&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#39;http://fonts.googleapis.com/earlyaccess/notosansjp.css&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を差し込む.&lt;/p&gt;

&lt;p&gt;あとは上記の &lt;code&gt;theme.js&lt;/code&gt; で&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt; export default ThemeManager.modifyRawThemePalette(
-  ThemeManager.getMuiTheme(LightRawTheme),
+  ThemeManager.modifyRawThemeFontFamily(
+    ThemeManager.getMuiTheme(LightRawTheme),
+    &amp;quot;&#39;Roboto&#39;, &#39;Noto Sans JP&#39;, sans-serif&amp;quot;
+  ),
   {
     primary1Color: Colors.cyan500,
     primary2Color: Colors.cyan700,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のように &lt;code&gt;ThemeManager.modifyRawThemeFontFamily&lt;/code&gt; で &lt;code&gt;font-family&lt;/code&gt; を変更する.&lt;/p&gt;

&lt;img src=&#34;https://blog.rudolph-miller.com/images//20160111/font-family-not-changed.png&#34; alt=&#34;/20160111/font-family-not-changed.png&#34;&gt;


&lt;img src=&#34;https://blog.rudolph-miller.com/images//20160111/font-family-changed.png&#34; alt=&#34;/20160111/font-family-changed.png&#34;&gt;


&lt;h1 id=&#34;see-also:2974f27f4339877b24e592c5128f86c3&#34;&gt;See Also&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rudolph-miller.com/2016/01/04/material-ui/&#34;&gt;Material-UIの紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/design/spec/style/color.html#color-color-palette&#34;&gt;Color palette&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.material-ui.com/#/customization/colors&#34;&gt;Material-UI customization/colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/design/spec/style/typography.html#typography-typeface&#34;&gt;Typography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Material-UI</title>
      <link>https://blog.rudolph-miller.com/2016/01/04/material-ui/</link>
      <pubDate>Mon, 04 Jan 2016 20:54:36 +0900</pubDate>
      
      <guid>https://blog.rudolph-miller.com/2016/01/04/material-ui/</guid>
      <description>

&lt;p&gt;Material-UIの紹介.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#material-design:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Material Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#material-ui:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Material-UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#see-also:685cc0a50b9186931af118d17b9d18fd&#34;&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;material-design:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Material Design&lt;/h1&gt;

&lt;p&gt;Material DesignはGoogleが開発しているDesign Guidelineで&lt;strong&gt;一貫性と実世界と同じ挙動でユーザーの負担を軽くする&lt;/strong&gt;ことが目標で、 &lt;strong&gt;マテリアル（素材）のある世界&lt;/strong&gt; が特徴.&lt;/p&gt;

&lt;p&gt;あらゆるdeviceを対象とした&lt;strong&gt;一貫性&lt;/strong&gt;と&lt;strong&gt;周りの世界と連続的で、同じ物理的性質や同じ動き&lt;/strong&gt;で、ユーザーがあらゆるdeviceであらゆるApplicationを、それぞれでの操作を学習する必要無く、自然に使えるようになる.&lt;/p&gt;

&lt;h1 id=&#34;material-ui:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Material-UI&lt;/h1&gt;

&lt;h2 id=&#34;about:685cc0a50b9186931af118d17b9d18fd&#34;&gt;About&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/callemall/material-ui&#34;&gt;Material-UI&lt;/a&gt;はMaterial DesignのReact.js実装.&lt;/p&gt;

&lt;p&gt;ComponentとThemeで簡単にMaterial Designを試すことができる.&lt;br /&gt;
(Themeについては今回は触れず、&lt;a href=&#34;https://blog.rudolph-miller.com/2016/01/11/theme-of-material-ui/&#34;&gt;Theme of Material-ui&lt;/a&gt;で紹介.)&lt;/p&gt;

&lt;h2 id=&#34;install:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Install&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save material-ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で &lt;code&gt;material-ui&lt;/code&gt; をinstallする.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zilverline/react-tap-event-plugin&#34;&gt;React-Tap-Event-Plugin&lt;/a&gt;を使用して、Tap eventをlistenしているので、これを有効にしないと一部のComponentが正常に動作しない.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save react-tap-event-plugin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でinstallし、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import injectTapEventPlugin from &#39;react-tap-event-plugin&#39;;
injectTapEventPlugin();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;をApplicationで実行して有効化する.&lt;/p&gt;

&lt;p&gt;また、Material-UIは &lt;code&gt;Roboto&lt;/code&gt; フォントを使用しているので、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#39;http://fonts.googleapis.com/css?family=Roboto&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;をHTMLに差し込むなどして、 &lt;code&gt;Roboto&lt;/code&gt; フォントを有効にする.&lt;/p&gt;

&lt;h2 id=&#34;example:685cc0a50b9186931af118d17b9d18fd&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { render } from &#39;react-dom&#39;;
import React, { Component, PropTypes } from &#39;react&#39;;
import injectTapEventPlugin from &#39;react-tap-event-plugin&#39;;
injectTapEventPlugin();

import {
  Avatar, Card, CardActions,
  CardHeader, CardMedia, CardTitle,
  RaisedButton, FlatButton, CardText
} from &#39;material-ui&#39;;

class App extends Component {
  render() {
    return (
      &amp;lt;Card&amp;gt;
        &amp;lt;CardHeader
          title=&amp;quot;Title&amp;quot;
          subtitle=&amp;quot;Subtitle&amp;quot;
          avatar={&amp;lt;Avatar style={{color: &#39;red&#39;}}&amp;gt;A&amp;lt;/Avatar&amp;gt;}/&amp;gt;
        &amp;lt;CardHeader
          title=&amp;quot;Demo Url Based Avatar&amp;quot;
          subtitle=&amp;quot;Subtitle&amp;quot;
          avatar=&amp;quot;http://lorempixel.com/100/100/nature/&amp;quot;/&amp;gt;
        &amp;lt;CardMedia overlay={&amp;lt;CardTitle title=&amp;quot;Title&amp;quot; subtitle=&amp;quot;Subtitle&amp;quot;/&amp;gt;}&amp;gt;
          &amp;lt;img src=&amp;quot;http://lorempixel.com/600/337/nature/&amp;quot;/&amp;gt;
        &amp;lt;/CardMedia&amp;gt;
        &amp;lt;CardTitle title=&amp;quot;Title&amp;quot; subtitle=&amp;quot;Subtitle&amp;quot;/&amp;gt;
        &amp;lt;CardActions&amp;gt;
          &amp;lt;RaisedButton primary={true} label=&amp;quot;Action1&amp;quot;/&amp;gt;
          &amp;lt;FlatButton label=&amp;quot;Action2&amp;quot;/&amp;gt;
        &amp;lt;/CardActions&amp;gt;
        &amp;lt;CardText&amp;gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Donec mattis pretium massa. Aliquam erat volutpat. Nulla facilisi.
          Donec vulputate interdum sollicitudin. Nunc lacinia auctor quam sed pellentesque.
          Aliquam dui mauris, mattis quis lacus id, pellentesque lobortis odio.
        &amp;lt;/CardText&amp;gt;
      &amp;lt;/Card&amp;gt;
    );
  }
}

render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;));
&lt;/code&gt;&lt;/pre&gt;

&lt;img src=&#34;https://blog.rudolph-miller.com/images/20160104/example.png&#34; alt=&#34;20160104/example.png&#34;&gt;


&lt;p&gt;こんな感じにComponentに &lt;code&gt;props&lt;/code&gt; を渡すだけ.&lt;/p&gt;

&lt;h1 id=&#34;see-also:685cc0a50b9186931af118d17b9d18fd&#34;&gt;See Also&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/callemall/material-ui&#34;&gt;Material UI - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.material-ui.com/#/home&#34;&gt;Material UI - Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zilverline/react-tap-event-plugin&#34;&gt;react-tap-event-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/design/spec/material-design/introduction.html&#34;&gt;Materail Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>